# fmt: off
P = [
    0, 16, 32, 48,
    1, 17, 33, 49,
    2, 18, 34, 50,
    3, 19, 35, 51,
    4, 20, 36, 52,
    5, 21, 37, 53,
    6, 22, 38, 54,
    7, 23, 39, 55,
    8, 24, 40, 56,
    9, 25, 41, 57,
    10, 26, 42, 58,
    11, 27, 43, 59,
    12, 28, 44, 60,
    13, 29, 45, 61,
    14, 30, 46, 62,
    15, 31, 47, 63,
 ]

SymbolicCNFConstraintForSbox55 = [  # Differential Probability PRESENT (55)
    [1, 9, 0, 0, 0, 1, 9, 0, 9, 9, 9],
    [1, 0, 1, 9, 0, 1, 1, 9, 9, 9, 9],
    [1, 1, 0, 9, 1, 1, 0, 9, 9, 9, 9],
    [1, 0, 9, 0, 9, 1, 0, 0, 9, 9, 9],
    [0, 9, 1, 1, 9, 1, 0, 1, 9, 9, 9],
    [9, 0, 1, 1, 9, 1, 1, 0, 1, 9, 9],
    [9, 1, 0, 1, 1, 9, 0, 0, 1, 9, 9],
    [9, 1, 0, 9, 0, 9, 0, 0, 0, 9, 9],
    [0, 9, 0, 9, 0, 0, 1, 0, 9, 9, 9],
    [9, 0, 1, 0, 1, 0, 9, 1, 9, 9, 9],
    [9, 0, 1, 0, 9, 1, 1, 1, 9, 9, 9],
    [9, 1, 0, 9, 9, 0, 9, 1, 0, 9, 9],
    [9, 1, 1, 0, 9, 9, 0, 9, 0, 9, 9],
    [9, 1, 9, 9, 1, 9, 0, 1, 0, 9, 9],
    [9, 1, 0, 1, 0, 9, 1, 0, 1, 9, 9],
    [0, 0, 9, 1, 0, 9, 0, 9, 0, 9, 9],
    [9, 0, 0, 9, 0, 9, 1, 0, 0, 9, 9],
    [9, 0, 1, 1, 1, 9, 0, 0, 1, 9, 9],
    [9, 1, 0, 0, 9, 0, 1, 1, 9, 9, 9],
    [9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 1],
    [0, 0, 9, 9, 0, 0, 9, 0, 9, 9, 1],
    [9, 1, 0, 0, 1, 1, 9, 1, 9, 9, 9],
    [9, 0, 0, 9, 1, 9, 1, 9, 1, 9, 9],
    [0, 1, 9, 1, 0, 9, 1, 1, 9, 9, 9],
    [9, 1, 0, 9, 9, 1, 1, 9, 0, 9, 9],
    [0, 1, 1, 9, 9, 9, 9, 0, 0, 9, 9],
    [9, 1, 1, 9, 0, 9, 0, 9, 1, 9, 9],
    [0, 0, 1, 9, 1, 0, 0, 9, 9, 9, 9],
    [9, 9, 9, 0, 9, 0, 0, 9, 0, 9, 1],
    [0, 1, 1, 9, 9, 9, 9, 1, 1, 9, 9],
    [9, 0, 0, 0, 9, 1, 0, 9, 0, 9, 9],
    [1, 9, 1, 1, 0, 9, 1, 9, 9, 9, 9],
    [9, 9, 9, 1, 1, 0, 1, 9, 0, 9, 9],
    [1, 0, 0, 1, 9, 9, 9, 1, 9, 9, 9],
    [1, 1, 9, 1, 1, 9, 0, 9, 9, 9, 9],
    [9, 1, 1, 9, 1, 9, 1, 9, 1, 9, 9],
    [9, 9, 9, 1, 0, 1, 0, 1, 9, 9, 9],
    [9, 9, 9, 1, 1, 1, 1, 9, 1, 9, 9],
    [9, 0, 1, 9, 0, 9, 0, 0, 0, 9, 9],
    [9, 0, 0, 9, 1, 9, 0, 0, 0, 9, 9],
    [0, 9, 0, 9, 9, 0, 0, 0, 9, 1, 9],
    [9, 0, 1, 1, 9, 9, 9, 1, 0, 9, 9],
    [1, 9, 1, 0, 1, 9, 9, 9, 0, 9, 9],
    [1, 0, 0, 0, 9, 9, 9, 0, 9, 9, 9],
    [0, 0, 9, 9, 1, 9, 1, 9, 0, 9, 9],
    [9, 0, 1, 9, 1, 1, 9, 9, 0, 9, 9],
    [9, 9, 9, 0, 0, 9, 0, 9, 1, 9, 9],
    [0, 0, 0, 9, 9, 9, 9, 9, 1, 9, 9],
    [9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 0],
    [9, 9, 9, 0, 0, 9, 1, 9, 0, 9, 9],
    [9, 1, 9, 0, 9, 9, 9, 0, 0, 9, 9],
    [9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 0],
    [9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 0],
    [9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 1],
    [9, 0, 0, 9, 0, 9, 0, 9, 1, 9, 9],
]

SymbolicCNFConstraintForSbox43 = [  # Differential PRESENT (43)
    [1, 0, 1, 9, 0, 1, 1, 9, 9],
    [9, 0, 0, 9, 1, 0, 1, 0, 9],
    [0, 9, 9, 1, 1, 1, 1, 0, 9],
    [9, 1, 0, 0, 9, 0, 1, 1, 9],
    [1, 0, 1, 9, 1, 1, 0, 0, 9],
    [1, 1, 0, 9, 0, 1, 1, 0, 9],
    [1, 1, 0, 9, 1, 1, 0, 9, 9],
    [0, 0, 1, 1, 1, 9, 0, 9, 9],
    [9, 1, 0, 1, 1, 1, 1, 9, 9],
    [9, 0, 1, 0, 1, 9, 1, 1, 9],
    [9, 1, 0, 0, 1, 1, 9, 1, 9],
    [0, 0, 0, 9, 1, 9, 1, 9, 9],
    [9, 0, 1, 0, 9, 0, 0, 1, 9],
    [9, 1, 0, 0, 0, 0, 9, 1, 9],
    [9, 1, 1, 0, 0, 9, 0, 9, 9],
    [9, 0, 1, 0, 9, 1, 1, 1, 9],
    [0, 0, 1, 9, 1, 0, 0, 9, 9],
    [9, 1, 1, 1, 1, 0, 1, 9, 9],
    [9, 0, 1, 1, 1, 1, 1, 9, 9],
    [0, 9, 0, 9, 9, 0, 0, 0, 1],
    [0, 1, 0, 9, 0, 0, 1, 9, 9],
    [0, 1, 1, 9, 0, 9, 0, 0, 9],
    [1, 1, 9, 0, 1, 9, 1, 1, 9],
    [0, 1, 0, 1, 9, 1, 1, 9, 9],
    [0, 1, 1, 9, 0, 9, 1, 1, 9],
    [9, 1, 1, 0, 1, 9, 1, 0, 9],
    [0, 1, 1, 9, 1, 9, 0, 1, 9],
    [9, 0, 0, 0, 1, 9, 9, 0, 9],
    [9, 9, 9, 9, 0, 0, 0, 0, 1],
    [9, 9, 9, 1, 0, 1, 0, 1, 9],
    [1, 9, 1, 1, 0, 9, 1, 9, 9],
    [0, 0, 9, 9, 0, 0, 9, 0, 1],
    [1, 0, 0, 1, 9, 9, 9, 1, 9],
    [1, 1, 9, 1, 1, 9, 0, 9, 9],
    [9, 0, 0, 9, 0, 9, 0, 1, 9],
    [9, 9, 9, 0, 0, 1, 0, 0, 9],
    [9, 1, 9, 9, 9, 9, 9, 9, 0],
    [0, 0, 0, 0, 9, 9, 9, 9, 1],
    [0, 0, 0, 1, 9, 9, 9, 0, 9],
    [9, 0, 0, 0, 9, 9, 1, 0, 9],
    [9, 9, 1, 9, 9, 9, 9, 9, 0],
    [9, 9, 9, 9, 9, 9, 9, 1, 0],
    [1, 9, 9, 9, 9, 9, 9, 9, 0],
]


def CountClausesInSequentialEncoding(main_var_num, cardinalitycons, clause_num):
    count = clause_num
    n = main_var_num
    k = cardinalitycons
    if k > 0:
        return count + 1 + (k - 1) + (n - 2) * 3 + (k - 1) * (n - 2) * 2 + 1
    if k == 0:
        return count + n
